!function(e){var t={};function n(r){if(t[r])return t[r].exports;var i=t[r]={i:r,l:!1,exports:{}};return e[r].call(i.exports,i,i.exports,n),i.l=!0,i.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)n.d(r,i,function(t){return e[t]}.bind(null,i));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=1)}([function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.maximumGrass=t.maximumTrees=t.noiseSeed=t.chunkSize=t.mountainMod=t.heights=void 0,t.heights={water:4.3,sand:5,plainsMin:4,plainsMax:25},t.mountainMod=t.heights.plainsMax-(t.heights.plainsMin+(t.heights.plainsMax-t.heights.plainsMin)/4),t.chunkSize={x:64,y:64},t.noiseSeed=1024,t.maximumTrees=75,t.maximumGrass=600},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),importScripts("js/three.min.js","js/perlin.js");const r=self,i=n(0),s=n(2);noise.seed(i.noiseSeed),r.addEventListener("message",(function(e){switch(e.data[0]){case"land":r.postMessage(function(e,t){let n,r,o,a=new Float32Array((i.chunkSize.x+1)*(i.chunkSize.y+1)*3),u=i.chunkSize.x+1,l=i.chunkSize.y+1,c=new Float32Array((i.chunkSize.x+1)*(i.chunkSize.y+1));for(let h=0;h<u;h++)for(let u=0;u<l;u++)n=h-i.chunkSize.x/2+e,r=u-i.chunkSize.y/2+t,a[3*(h*l+u)]=n,a[3*(h*l+u)+2]=r,o=s.getHeight(n,r),a[3*(h*l+u)+1]=o,c[h*l+u]=s.getLandTexture(n,r,o);return["land",e,t,a,c]}(e.data[1],e.data[2]));break;case"grass":r.postMessage(function(e,t,n,r){let o,a,u,l=new THREE.Matrix4,c=new THREE.Vector3,h=new THREE.Euler,f=new THREE.Quaternion,m=new THREE.Vector3(1,1,1),d=[],p=[],g=[],x=0,y=0;for(let r=0;r<n;r++)for(let g=0;g<n&&!(x>=i.maximumGrass);g++)o=r-n/2+e,a=g-n/2+t,u=s.getHeight(o,a),u>i.heights.sand+1&&u<i.heights.sand+8&&noise.simplex2(o/5,a/5)>.6&&(m.set(1,1,1),c.x=o+noise.simplex2(o+2,a+2),c.z=a+noise.simplex2(o+4,a+4),u=s.getHeight(c.x,c.z),c.y=u+.25,h.y=noise.simplex2(o,a)*Math.PI*2,f.setFromEuler(h),l.compose(c,f,m),l.toArray().forEach(e=>{p.push(e)}),d.push(Math.abs(noise.simplex2(o,a))),x++);for(let n=0;n<2*r;n++)for(let d=0;d<2*r&&!(y>=i.maximumTrees);d++)if(o=n-r/2+e,a=d-r/2+t,u=s.getHeight(o,a),u>i.heights.sand+2&&u<i.heights.sand+10&&noise.simplex2(o/35,a/35)>.7&&noise.simplex2(2*o,2*a)>.9){let e=.3+noise.simplex2(o/35,a/35);m.set(e,e,e),c.x=o,c.z=a,c.y=u-.1,h.y=noise.simplex2(o/5,a/5)*Math.PI,f.setFromEuler(h),l.compose(c,f,m),l.toArray().forEach(e=>{g.push(e)}),y++}return["grass",p,d,g]}(e.data[1],e.data[2],e.data[3],e.data[4]))}})),t.default={}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getTreeGeometery=t.getLandTexture=t.getHeight=void 0;const r=n(0);t.getHeight=function(e,t){let n=25*noise.simplex2(e/100,t/100)+25+1.5*noise.simplex2(e/8,t/8)+30*noise.simplex2(e/1200,t/1200)+5,i=r.heights.plainsMin+(n-r.heights.plainsMin)/4;return n>r.heights.plainsMax?Math.pow(i,1.4)-13.5:i},t.getLandTexture=function(e,t,n){if(n<r.heights.water)return 0;if(n<r.heights.sand+.5)return 1;if(n<r.heights.sand+1)return 1+2*(n-(r.heights.sand+.5));let i=3+3*noise.simplex2(e/20,t/20);if(n>r.heights.plainsMax+3+i)return 4;if(n>r.heights.plainsMax+2+i)return n-(r.heights.plainsMax+2+i)+3;let s=5+5*noise.simplex2(e/15,t/15);return n>r.mountainMod+s?3:n>r.mountainMod+s-1?n-(r.mountainMod+s-1)+2:2},t.getTreeGeometery=function(){const e=new THREE.Color(2853674),t=new THREE.Color(5056285),n=new THREE.Geometry,r=new THREE.ConeGeometry(1,2,8);r.faces.forEach(t=>t.color.set(e)),r.translate(0,4,0),n.merge(r);const i=new THREE.ConeGeometry(1.2,2,8);i.faces.forEach(t=>t.color.set(e)),i.translate(0,3,0),n.merge(i);const s=new THREE.ConeGeometry(1.4,2,8);s.faces.forEach(t=>t.color.set(e)),s.translate(0,2,0),n.merge(s);const o=new THREE.CylinderGeometry(.3,.3,3);o.translate(0,-.5,0),o.faces.forEach(e=>e.color.set(t)),n.merge(o);let a=new THREE.BufferGeometry;return a.fromGeometry(n),a}}]);
//# sourceMappingURL=worker.js.map